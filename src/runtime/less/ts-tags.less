@import 'ts-variables.less';

/**
@TODO padding/margin -right for DL, Figcaption + DL (JS ellipsis detection?)
@TODO ts-tag-deletable class added with MutationObservers
**/

// Tag .........................................................................

@tag-padding: @ts-unit-half;
@tag-margin: @ts-unit-half;
@tag-height: @ts-unit-plus;
@tag-icon-width: @tag-height;

.ts-tag {
	display: inline-block;
	display: inline-flex;
	max-height: @tag-height;
	max-width: 100%;
	padding: 0;
	margin: 0 @tag-margin @tag-margin 0;
	border-radius: @ts-radius;
	background: @ts-lite-liter;
	color: @ts-black;
	line-height: 0;
	font-size: 0;
	border-collapse: separate;

	// Reset
	dl,
	dt,
	dd {
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}
	dl,
	dl > div,
	dt,
	dd,
	figcaption {
		.ts-mixin-fixheight(@tag-height);
		.ts-mixin-selectable();
		display: inline-block;
		min-width: 0;
		padding: 0;
		margin: 0;
		font-size: 0;
		font-weight: @ts-fontweight;
		// max-width: 100%;
	}
	dl,
	figcaption {
		// max-width: ~"calc(100% - @{tag-padding})";
		overflow: hidden;
	}
	dt,
	dd,
	figcaption {
		line-height: @tag-height;
		&,
		&:before,
		&:after {
			font-size: @ts-fontsize;
			line-height: @tag-height;
			vertical-align: bottom;
		}
	}
	dl,
	dl > div {
		&:before,
		&:after {
			font-size: @ts-fontsize;
			line-height: @tag-height;
			vertical-align: bottom;
		}
	}

	// Tag outer right-margin (loose list)
	&:last-child {
		margin-right: 0;
	}

	// Tag inner left-padding
	dl:first-child {
		padding-left: @tag-padding;
	}

	// Tag inner right-padding
	// figcaption + dl {
	// 	max-width: ~"calc(100% - @{tag-icon-width})";
	// }

	dl:last-child {
		margin-right: @tag-margin;
		padding-right: @tag-padding;
	}
	// dl:only-child {
	// 	max-width: 100%;
	// }
	// &:not(.ts-tag-locked) {
	// 	figcaption + dl:last-child {
	// 		@tag-icon-width_padding: @tag-icon-width + @tag-padding;
	// 		max-width: ~"calc(100% - @{tag-icon-width_padding})";
	// 	}
	// }

	// Label/Icon
	figcaption {
		.ts-mixin-fix(@tag-icon-width, @tag-height);
		text-align: center;
		vertical-align: top;
	}

	// Dash between Key-Value sets
	dl + dl,
	dl > div + div {
		&:before {
			content: '\00a0â€“ ';
		}
	}

	// Key: comma separators and colon terminator
	dt {
		font-weight: @ts-fontweight-semibold;
		text-transform: uppercase;
		&:after {
			content: ',\00a0';
		}
		&:last-of-type {
			&:after {
				content: ':\00a0';
			}
		}
		&:only-child,
		& + dt:last-child,
		& + dt + dtlast-child,
		& + dt + dt + dt:last-child,
		& + dt + dt + dt + dt:last-child,
		& + dt + dt + dt + dt + dt:last-child {
			&:after {
				content: '';
			}
		}
	}

	// Value: comma separators
	dd {
		&:after {
			content: ',\00a0';
		}
		&:last-of-type:after {
			content: '';
		}
	}

	// Clickable look
	&.ts-tag-clickable {
		figcaption,
		dd,
		dt {
			color: @ts-blue;
		}
		.ts-device-mouse &:not(.ts-tag-locked):hover {
			cursor: pointer;
			figcaption,
			dl,
			dt,
			dd {
				color: @ts-blue-dark;
			}
		}
	}

	// Locked look
	&.ts-tag-locked {
		padding-right: @tag-icon-width;
		figcaption,
		dd,
		dt,
		&:after {
			color: @ts-medium;
		}
		// figcaption + dl:last-child {
		// 	@tag-icon-width_padding: @tag-icon-width + @tag-padding;
		// 	max-width: ~"calc(100% - @{tag-icon-width_padding})";
		// 	padding-right: 0;
		// }
		dl:last-child {
			margin-right: 0;
		}
		&:after {
			.ts-mixin-icon(@ts-fontsize-big);
			position: absolute;
			top: (@ts-unit - @ts-unit-quarter);
			right: @ts-unit-quarter + 2px; // @TODO fix with SVGs...
			vertical-align: top;
			content: 'V'; // ts-icon-locked
		}
		del {
			display: none;
		}
		.ts-device-mouse &:hover {
			cursor: default;
		}
	}

	// Delete button
	del {
		.ts-mixin-fix(@tag-icon-width, @tag-height);
		position: relative;
		display: inline-block;
		line-height: @tag-height;
		text-decoration: none;
		vertical-align: top;
		&:after {
			.ts-mixin-icon(@ts-fontsize-big);
			.ts-mixin-fix(@tag-icon-width, @tag-height);
			display: inline-block;
			line-height: @tag-height;
			color: @ts-medium;
			content: '*'; // ts-icon-close
		}
		.ts-device-mouse &:hover {
			cursor: pointer;
			&:after {
				color: @ts-black;
			}
		}
	}
}

// Tags ........................................................................

.ts-tags {
	li {
		margin-bottom: @tag-margin;
		.ts-tag {
			position: relative;
			display: flex;
			flex-direction: row;
			align-items: flex-start;
			justify-content: flex-start;
			padding-right: 0;

			&.ts-tag-locked {
				padding-right: @tag-icon-width;
			}

			&:after {
				position: absolute;
				top: 50%;
				margin: 0;
				right: @ts-unit-quarter + 1.5px; // @TODO Fix with SVGs.....
			}

			dl,
			dt,
			dd {
				text-overflow: ellipsis;
				overflow: hidden;
				white-space: nowrap;
			}

			figcaption {
				flex: initial;
			}
			dl {
				flex: 1;
			}
			del {
				flex: @tag-icon-width;
			}
		}
	}
}


.ts-tag {
	// Color schemes .............................................................

	&.ts-danger {
		background: @ts-red;
		&,
		figcaption,
		dd,
		dt {
			color: @ts-red-text;
		}
	}
	&.ts-danger-lite {
		background: @ts-red-lite;
		&,
		figcaption,
		dd,
		dt {
			color: @ts-red-darker;
		}
	}

	&.ts-warning {
		background: @ts-orange;
		&,
		figcaption,
		dd,
		dt {
			color: @ts-orange-text;
		}
	}
	&.ts-warning-lite {
		background: @ts-yellow;
		&,
		figcaption,
		dd,
		dt {
			color: @ts-yellow-text;
		}
	}

	&.ts-success {
		background: @ts-green;
		&,
		figcaption,
		dd,
		dt {
			color: @ts-green-text;
		}
	}
	&.ts-success-lite {
		background: @ts-litegreen;
		&,
		figcaption,
		dd,
		dt {
			color: @ts-green;
		}
	}

	&.ts-blue {
		background: @ts-blue;
		&,
		figcaption,
		dd,
		dt {
			color: @ts-blue-text;
		}
	}
	&.ts-blue-lite {
		background: @ts-liteblue;
		&,
		figcaption,
		dd,
		dt {
			color: @ts-blue;
		}
	}
}
